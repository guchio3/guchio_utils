ARG BASE_IMG

FROM $BASE_IMG
ARG PYTHON_VERSION=3.7


# install general requirements
RUN apt-get update
RUN apt-get install -y --no-install-recommends software-properties-common 
RUN add-apt-repository ppa:neovim-ppa/unstable
RUN apt-get update && apt-get install -y --no-install-recommends \
         build-essential \
         cmake \
         sudo \
         sed \
         ssh \
         sshfs \
         automake \
         wget \
         less \
         gcc \
         g++ \
         git \
         curl \
         htop \
         neovim \
         ncurses-term \
         exuberant-ctags \
         ca-certificates \
         libjpeg-dev \
         libevent-dev \
         ncurses-dev \
         libpng-dev &&\
     rm -rf /var/lib/apt/lists/*


# install miniconda
RUN curl -o ~/miniconda.sh -O  https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh  && \
     chmod +x ~/miniconda.sh && \
     ~/miniconda.sh -b -p ~/anaconda3 && \
     rm ~/miniconda.sh && \
     $HOME/anaconda3/bin/conda install -y python=$PYTHON_VERSION numpy pyyaml scipy ipython mkl mkl-include cython typing jupyter flake8 autopep8 && \
     $HOME/anaconda3/bin/conda install -y -c pytorch magma-cuda100 && \
     $HOME/anaconda3/bin/conda install -y -c conda-forge tmux lightgbm catboost xgboost isort matplotlib seaborn && \
     $HOME/anaconda3/bin/conda clean -ya
ENV PATH $HOME/anaconda3/bin:$PATH
RUN $HOME/anaconda3/bin/pip install ninja kaggle
# This must be done before pip so that requirements.txt is available
WORKDIR /opt/pytorch
COPY . .


# post processing ...
# RUN git submodule update --init
# RUN TORCH_CUDA_ARCH_LIST="3.5 5.2 6.0 6.1 7.0+PTX" TORCH_NVCC_FLAGS="-Xfatbin -compress-all" \
#     CMAKE_PREFIX_PATH="$(dirname $(which conda))/../" \
#     pip install -v .
# 
# RUN git clone https://github.com/pytorch/vision.git && cd vision && pip install -v .


# setup envs
WORKDIR /workspace
RUN chmod -R a+w /workspace
RUN git clone https://github.com/guchio3/guchio_utils.git
WORKDIR /root
RUN rm .bashrc && ln -s /workspace/guchio_utils/.bashrc .bashrc
RUN ln -s /workspace/guchio_utils/.tmux.conf .tmux.conf
RUN mkdir -p .config/nvim/
RUN ln -s /workspace/guchio_utils/nvim/* .config/nvim/

# install git-completion.bash and git-prompt.sh
RUN wget https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash -O ~/.git-completion.bash \
        && chmod a+x ~/.git-completion.bash
RUN wget https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh -O ~/.git-prompt.sh \
        && chmod a+x ~/.git-prompt.sh

# create envs for neovim
RUN $HOME/anaconda3/bin/conda create -n neovim-3 python=3.7
RUN $HOME/anaconda3/envs/neovim-3/bin/pip install neovim
RUN $HOME/anaconda3/bin/conda create -n neovim-2 python=2.7
RUN $HOME/anaconda3/envs/neovim-2/bin/pip install neovim
RUN mkdir -p ~/.cache/dein
WORKDIR /root/.cache/dein
RUN curl https://raw.githubusercontent.com/Shougo/dein.vim/master/bin/installer.sh > installer.sh
RUN sh ./installer.sh ~/.config/nvim

# set locale
RUN apt-get update && apt-get install -y locales
RUN locale-gen en_US.UTF-8  
ENV LANG en_US.UTF-8  
ENV LANGUAGE en_US:en  
ENV LC_ALL en_US.UTF-8

# set ctags
RUN ctags -R --fields=+l --languages=python --python-kinds=-iv -f ./pylibs.tags $(python -c "import os, sys; print(' '.join('{}'.format(d) for d in sys.path if os.path.isdir(d)))")
RUN mkdir ~/.config/nvim/tags/
RUN mv pylibs.tags ~/.config/nvim/tags/

# set jupyter notebook
# jupyter vim key-bind settings
RUN $HOME/anaconda3/bin/pip install jupyter_contrib_nbextensions
RUN $HOME/anaconda3/bin/jupyter contrib nbextension install --user
RUN mkdir -p $(jupyter --data-dir)/nbextensions
RUN git clone https://github.com/lambdalisue/jupyter-vim-binding $(jupyter --data-dir)/nbextensions/vim_binding
RUN $HOME/anaconda3/bin/jupyter nbextension enable vim_binding/vim_binding
# edit vim_bindings setting as I can use C-c for exitting insert mode
RUN sed -i "s/      'Ctrl-C': false,  \/\/ To enable clipboard copy/\/\/      'Ctrl-C': false,  \/\/ To enable clipboard copy/g" $(jupyter --data-dir)/nbextensions/vim_binding/vim_binding.js

# set git
RUN git config --global user.email "astt.hwhw@gmail.com"
RUN git config --global user.name "guchio3"

## mv dir
WORKDIR /workspace
